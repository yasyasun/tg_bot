from typing import Dict, Union, List

from loguru import logger
from telebot.types import Message

from database.models import db, User, History, SearchResult, Images
from loader import bot


@logger.catch
def save_user(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –∑–∞–Ω–æ—Å–∏—Ç –≤ –ë–î –≤ —Ç–∞–±–ª–∏—Ü—É 'users'.

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ Telegram.
    """
    with db:
        username = message.from_user.username
        try:
            user_id = User.get(User.name == username)
        except Exception:
            user_id = None
        if not user_id:
            User(name=username).save()


@logger.catch
def save_history(data: Dict) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –≤ –ë–î.
    –ó–∞–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü—É 'histories'.

    :param data: —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞.
    """
    with db:
        user = (User
                .select()
                .where(User.name == data['user'])
                .get()
                )
        History(
            date=data['date_time'],
            command=data['command'],
            city=data['city'],
            start_date=f"{data['start_day']}-{data['start_month']}-{data['start_year']}",
            end_date=f"{data['end_day']}-{data['end_month']}-{data['end_year']}",
            from_user=user.id
        ).save()


@logger.catch
def save_results(data_hotel: Dict, data_request: Dict, amount_nights: int) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –≤ –ë–î.
    –ó–∞–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü—É 'results'.

    :param data_hotel: —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –æ—Ç–µ–ª—é.
    :param data_request: —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞.
    :param amount_nights: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π.
    """
    with db:
        user = (User
                .select()
                .where(User.name == data_request['user'])
                .get()
                )
        history = (History
                   .select()
                   .where(History.from_user == user.id and History.date == data_request['date_time'])
                   .get()
                   )
        SearchResult(
            hotel_id=data_hotel['id'],
            name=data_hotel['name'],
            amount_nights=amount_nights,
            price=data_hotel['price'],
            total_price=data_hotel['price'] * amount_nights,
            distance=data_hotel['distance'],
            address=data_hotel['address'],
            need_photo=data_hotel['need_photo'],
            from_history=history.id
        ).save()


@logger.catch
def save_images(url: str, id_hotel: int):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ—Ç–µ–ª—è –≤ –ë–î.
    –ó–∞–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü—É 'images'.

    :param url: —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –æ—Ç–µ–ª—é.
    :param id_hotel: —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞.
    """
    with db:
        result = (SearchResult
                  .select()
                  .where(SearchResult.hotel_id == id_hotel)
                  .get()
                  )
        Images(
            url=url,
            from_result=result.id
        ).save()


@logger.catch
def show_history(username: str) -> Union[List, None]:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –≤ –ë–î.


    :param username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram (username).
    :return: —Å–ø–∏—Å–æ–∫ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ None
    """
    with db:
        user = (User
                .select()
                .where(User.name == username)
                .get()
                )
        histories = [history for history in History.select().where(History.from_user == user.id)]
        if histories:
            return histories
        else:
            return None


@logger.catch
def delete_history(message: Message, username: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ
    :param username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram (username)
    """
    with db:
        user = (User
                .select()
                .where(User.name == username)
                .get()
                )
        for history in History.select().where(History.from_user == user.id):
            History.delete_instance(history)
    bot.send_message(message.chat.id,
                     f"üëç <b>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –æ—á–∏—â–µ–Ω–∞!</b>\n"
                     f"–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n"
                     f"–ù–∞–ø—Ä–∏–º–µ—Ä: <b>/help</b>", parse_mode="html")
