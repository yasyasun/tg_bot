from datetime import timedelta, date
from typing import Dict

from loguru import logger
from telebot.types import CallbackQuery
from telegram_bot_calendar import DetailedTelegramCalendar

from loader import bot
from states.user_states import UserInputState
from utils.ready_for_answer import low_high_price_answer

LSTEP_RU: Dict[str, str] = {'y': '–≥–æ–¥', 'm': '–º–µ—Å—è—Ü', 'd': '–¥–µ–Ω—å'}


@bot.callback_query_handler(func=DetailedTelegramCalendar.func())
@logger.catch
def date_reply(call: CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, —Ä–µ–∞–≥–∏—Ä—É—é—â–∞—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ-–∫–∞–ª–µ–Ω–¥–∞—Ä–µ.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø–∏—Å–∞–Ω—ã –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è 'start_date' –∏ 'end_date'.
    –ï—Å–ª–∏ –Ω–µ—Ç - —Å–Ω–æ–≤–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —ç—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
    –ï—Å–ª–∏ –¥–∞, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'last_command'.
    –ï—Å–ª–∏ 'last_command' == 'lowprice' –∏–ª–∏ 'highprice' - –∑–∞–≤–µ—Ä—à–∞–µ—Ç –æ–ø—Ä–æ—Å –∏
    –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ó–∞—Ç–µ–º –æ–∂–∏–¥–∞–µ—Ç –≤–≤–æ–¥–∞ —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã.
    –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –æ–ø—Ä–æ—Å –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–≤–µ—Å—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∑–∞ –Ω–æ—á—å.

    :param call: –æ—Ç–∫–ª–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """

    with bot.retrieve_data(call.message.chat.id) as data:
        if not data.get('start_date'):
            result, key, step = DetailedTelegramCalendar(min_date=date.today(), locale='ru').process(call.data)
        elif not data.get('end_date'):
            new_start_date = data.get('start_date') + timedelta(1)
            result, key, step = DetailedTelegramCalendar(min_date=new_start_date, locale='ru').process(call.data)

    if not result and key:
        bot.edit_message_text(f'–í—ã–±–µ—Ä–∏—Ç–µ {LSTEP_RU[step]}',
                              call.message.chat.id, call.message.message_id, reply_markup=key)
    elif result:
        with bot.retrieve_data(call.message.chat.id) as data:
            if not data.get('start_date'):
                data['start_date'] = result
                calendar, step = DetailedTelegramCalendar(min_date=result + timedelta(1)).build()
                bot.edit_message_text('–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤—ã–µ–∑–¥–∞',
                                      call.message.chat.id, call.message.message_id, reply_markup=calendar)
            elif not data.get('end_date'):
                data['end_date'] = result

                bot.delete_message(call.message.chat.id, call.message.message_id)

                if data.get('command') in ('/lowprice', '/highprice'):
                    data_dict = data
                    low_high_price_answer(call.message, data_dict, call.from_user.username)
                    bot.send_message(call.message.chat.id,
                                     f"üòâüëå –ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É!\n"
                                     f"–ù–∞–ø—Ä–∏–º–µ—Ä: <b>/help</b>", parse_mode="html")
                else:
                    bot.set_state(call.from_user.id, UserInputState.min_price, call.message.chat.id)
                    bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∑–∞ –Ω–æ—á—å –≤ $:")
